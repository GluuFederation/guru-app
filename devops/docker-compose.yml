version: "3.2"

services:
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
      - POSTGRES_USER_FILE=/run/secrets/postgres-user
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    secrets:
      - postgres-password
      - postgres-user
  nginx:
    image: gluufederation/guru-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/api-media:/app/api-media
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  api:
    image: gluufederation/guru-api
    restart: always
    command: /bin/sh -c 'python manage.py migrate --no-input && gunicorn guru.wsgi:application -c gunicorn.py.ini'
    ports:
      - "5000:5000"
    depends_on:
      - db
    volumes:
      - ./data/api-media:/app/media
    environment:
      - DEPLOYMENT_ENVIRONMENT=docker
    secrets:
      - api-secrets
  qcluster:
    image: gluufederation/guru-api
    restart: always
    command: /bin/sh -c 'python manage.py qcluster'
    depends_on:
      - db
    volumes:
      - ./data/api-media:/app/media
    environment:
      - DEPLOYMENT_ENVIRONMENT=docker
    secrets:
      - api-secrets

secrets:
  api-secrets:
    file: ./secrets/api.env
  postgres-password:
    file: ./secrets/postgres-password.env
  postgres-user:
    file: ./secrets/postgres-user.env
